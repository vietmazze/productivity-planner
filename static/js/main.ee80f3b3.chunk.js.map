{"version":3,"sources":["components/Layout.js","components/Navbar.js","components/Quote.js","components/Square.js","components/Circle.js","components/Input.js","components/Body.js","components/Timer.js","components/PomodoroControl.js","components/Pomodoro.js","hooks/useInterval.js","App.js","index.js","sounds/alarm.mp3"],"names":["Layout","props","className","children","Navbar","Quote","Square","type","id","name","onKeyDown","console","log","tabIndex","Circle","ModalHandler","circleIds","isShowing","active","OnSubmit","e","preventDefault","target","map","circle","onClick","ResizableTextarea","handleChange","event","state","minRows","maxRows","previousRows","rows","currentRows","scrollHeight","scrollTop","setState","value","this","cols","placeholder","onChange","React","PureComponent","Body","task","child","Input","Timer","currentMode","currentTime","mode","time","moment","format","Controls","activeStatus","handleReset","setActive","Pomodoro","setCircleStyling","circleStyling","useState","breakVal","setBreakVal","sessionVal","setSessionVal","setMode","setTime","beep","useRef","callback","delay","savedCallback","useEffect","current","setInterval","clearInterval","useInterval","play","PomodoroControl","src","alarm","ref","App","setisShowing","document","getElementById","style","backgroundColor","ReactDOM","render","module","exports"],"mappings":"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","file":"static/js/main.ee80f3b3.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Layout = props => {\r\n  return (\r\n    <div className=\"container mx-auto h-screen\">\r\n      <div className=\" grid grid-rows-1 grid-flow-row gap-3 relative\">\r\n        {props.children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className=\" bg-gray-500 h-20 py-3  \">\r\n      <div className=\"flex flex-col content-center\">\r\n        <h1 className=\"font-serif text-center text-gray-700 text-4xl\">\r\n          {\" \"}\r\n          Productivity Planner{\" \"}\r\n        </h1>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\n\r\nconst Quote = () => {\r\n  return (\r\n    <blockquote className=\"font-sans text-lg  text-center .italic text-orange-500 pt-8\">\r\n      \"The way to achieve your own success is to be willing to help somebody\r\n      else get it first.\"\r\n      <footer className=\"\">IYanla Vanzantt</footer>\r\n    </blockquote>\r\n  );\r\n};\r\n\r\nexport default Quote;\r\n","import React from \"react\";\r\n\r\n// Need to work on implement onClick event to save data\r\n// Enter should get us out of the input?\r\nfunction Square(props) {\r\n  return (\r\n    <div className=\"flex flex-col px-12 \">\r\n      <input\r\n        type=\"text\"\r\n        id=\"\"\r\n        name=\"target\"\r\n        className=\"squarebox text-xs text-center \"\r\n        onKeyDown={console.log(\"test\")}\r\n        tabIndex=\"0\"\r\n      />\r\n      <label className=\"font-semibold text-xs text-center\">Target</label>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Square;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\n// Enable Pomodoro modal when user click on the circle\r\n// Change the color of circle once Pomodoro comples\r\n// Update the Actual square count when user complete each circle\r\n//\r\nfunction Circle({ ModalHandler, isShowing }) {\r\n  const circleIds = [\r\n    { id: 1, active: true },\r\n    { id: 2, active: true },\r\n    { id: 3, active: true },\r\n    { id: 4, active: true },\r\n    { id: 5, active: true }\r\n  ];\r\n\r\n  const OnSubmit = e => {\r\n    e.preventDefault();\r\n    ModalHandler();\r\n\r\n    circleIds[e.target.id - 1].active = false;\r\n    if (!circleIds[e.target.id - 1].active) {\r\n      e.target.className = \"circledot-close\";\r\n    }\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   OnSubmit();\r\n  // }, [circleIds]);\r\n  return (\r\n    <div className=\" \">\r\n      {circleIds.map(circle => {\r\n        return (\r\n          <button\r\n            id={`${circle.id}`}\r\n            name=\"circle\"\r\n            className={circle.active ? \"circledot\" : \"circledot-close\"}\r\n            onClick={OnSubmit}\r\n          ></button>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Circle;\r\n","import React from \"react\";\r\n\r\nclass ResizableTextarea extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: \"\",\r\n      rows: 2,\r\n      minRows: 2,\r\n      maxRows: 5\r\n    };\r\n  }\r\n\r\n  handleChange = event => {\r\n    const textareaLineHeight = 24;\r\n    const { minRows, maxRows } = this.state;\r\n\r\n    const previousRows = event.target.rows;\r\n    event.target.rows = minRows; // reset number of rows in textarea\r\n\r\n    const currentRows = ~~(event.target.scrollHeight / textareaLineHeight);\r\n\r\n    if (currentRows === previousRows) {\r\n      event.target.rows = currentRows;\r\n    }\r\n\r\n    if (currentRows >= maxRows) {\r\n      event.target.rows = maxRows;\r\n      event.target.scrollTop = event.target.scrollHeight;\r\n    }\r\n\r\n    this.setState({\r\n      value: event.target.value,\r\n      rows: currentRows < maxRows ? currentRows : maxRows\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <textarea\r\n        rows={this.state.rows}\r\n        value={this.state.value}\r\n        cols='40'\r\n        placeholder={\"Enter your text here...\"}\r\n        className='border-solid border border-orange-500 outline-none resize-none '\r\n        onChange={this.handleChange}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default ResizableTextarea;\r\n","import React from \"react\";\r\nimport Square from \"./Square\";\r\nimport Circle from \"./Circle\";\r\nimport Input from \"./Input\";\r\nfunction Body({ ModalHandler, isShowing }) {\r\n  const taskNames = [\r\n    { id: 1, task: \"MOST IMPORTANT TASK OF THE DAY\" },\r\n    {\r\n      id: 2,\r\n      task: \"SECONDARY TASK OF IMPORTANT\"\r\n    },\r\n    {\r\n      id: 3,\r\n      task: \" TERTIARY TASK OF IMPORTANT\"\r\n    },\r\n    { id: 4, task: \"ADDTIONAL TASKS\" }\r\n  ];\r\n  return (\r\n    <div>\r\n      {taskNames.map(child => {\r\n        {\r\n          return (\r\n            <div id={`${child.id}`} className=\" row-span-5 \">\r\n              <h1 className=\"text-xl font-bold\">{child.task}</h1>\r\n              <div className=\"flex flex-row relative\">\r\n                <Input />\r\n\r\n                <div className=\"floatObject flex flex-row\">\r\n                  <Square></Square>\r\n                  <Circle ModalHandler={ModalHandler} isShowing={isShowing} />\r\n                  <Square />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        }\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Body;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nconst Timer = ({ currentMode, currentTime }) => {\r\n  const [mode] = currentMode;\r\n  const [time] = currentTime;\r\n\r\n  return (\r\n    <div>\r\n      <h2 className=\"text-xl\">{mode === \"session\" ? \"Session\" : \"Break\"}</h2>\r\n      <h3>{moment(time).format(\"mm:ss\")}</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Timer;\r\n","import React from \"react\";\r\n\r\nconst Controls = ({ activeStatus, handleReset }) => {\r\n  const [active, setActive] = activeStatus;\r\n  return (\r\n    <div className=\"controls-wrapper\">\r\n      <button id=\"start_stop\" onClick={() => setActive(!active)}>\r\n        {active ? <span>&#10074;&#10074;</span> : <span>&#9658;</span>}\r\n      </button>\r\n      <button id=\"reset\" onClick={handleReset}>\r\n        &#8635;\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Controls;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nimport { useInterval } from \"../hooks/useInterval\";\r\n\r\nimport Timer from \"./Timer\";\r\nimport PomodoroControl from \"./PomodoroControl\";\r\n\r\nimport alarm from \"../sounds/alarm.mp3\";\r\n\r\nconst Pomodoro = ({ ModalHandler, circleStyling, setCircleStyling }) => {\r\n  const [breakVal, setBreakVal] = useState(1);\r\n  const [sessionVal, setSessionVal] = useState(1);\r\n  const [mode, setMode] = useState(\"session\");\r\n  const [time, setTime] = useState(sessionVal * 60 * 1000);\r\n  const [active, setActive] = useState(false);\r\n  const beep = useRef();\r\n  useInterval(() => setTime(time - 1000), active ? 1000 : null);\r\n\r\n  useEffect(() => {\r\n    setTime(sessionVal * 60 * 1000);\r\n  }, [sessionVal]);\r\n\r\n  useEffect(() => {\r\n    if (time === 0 && mode === \"session\") {\r\n      beep.current.play();\r\n      setMode(\"break\");\r\n      setTime(breakVal * 60 * 1000);\r\n    } else if (time === 0 && mode === \"break\") {\r\n      beep.current.play();\r\n      setMode(\"session\");\r\n      setTime(sessionVal * 60 * 1000);\r\n      setCircleStyling(\"circledot-close\");\r\n      ModalHandler();\r\n    }\r\n  }, [time, breakVal, sessionVal, mode]);\r\n\r\n  const handleReset = () => {\r\n    //beep.current.pause()\r\n    //beep.current.currentTime = 0\r\n    setActive(false);\r\n    setMode(\"session\");\r\n    setBreakVal(5);\r\n    setSessionVal(25);\r\n    setTime(25 * 60 * 1000);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mx-auto\">\r\n      <div className=\"time-wrapper\">\r\n        <button onClick={ModalHandler} className=\"closeButton\">\r\n          X\r\n        </button>\r\n        <Timer\r\n          currentMode={[mode, setMode]}\r\n          currentTime={[time, setTime]}\r\n        ></Timer>\r\n        <PomodoroControl\r\n          activeStatus={[active, setActive]}\r\n          handleReset={handleReset}\r\n        />\r\n        <h4 className=\"text-center text-4xl uppercase text-red-600  \">\r\n          {\" \"}\r\n          Pomodoro Clock\r\n        </h4>\r\n        <audio id=\"beep\" src={alarm} ref={beep} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pomodoro;\r\n","import { useEffect, useRef } from \"react\";\r\n\r\nexport function useInterval(callback, delay) {\r\n  const savedCallback = useRef();\r\n\r\n  // Remember the latest callback.\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    function tick() {\r\n      savedCallback.current();\r\n    }\r\n    if (delay !== null) {\r\n      let id = setInterval(tick, delay);\r\n      return () => clearInterval(id);\r\n    }\r\n  }, [delay]);\r\n}\r\n","import React, { useState, useEffect } from \"react\";\nimport Layout from \"./components/Layout\";\nimport Navbar from \"./components/Navbar\";\nimport Quote from \"./components/Quote\";\nimport Body from \"./components/Body\";\nimport Pomodoro from \"./components/Pomodoro\";\nfunction App() {\n  const [isShowing, setisShowing] = useState(false);\n\n  const ModalHandler = () => {\n    setisShowing(!isShowing);\n  };\n  useEffect(() => {\n    if (isShowing === true) {\n      document.getElementById(\"body\").style.backgroundColor = \"#3B1F19\";\n    }\n    if (isShowing === false) {\n      document.getElementById(\"body\").style.backgroundColor = \"white\";\n    }\n  }, [isShowing]);\n\n  return (\n    <div className=\"App\" id=\"body\">\n      <Layout>\n        <Navbar />\n\n        <Quote />\n\n        <Body ModalHandler={ModalHandler} isShowing={isShowing} />\n        {isShowing ? <Pomodoro ModalHandler={ModalHandler}></Pomodoro> : null}\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"../src/index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","module.exports = __webpack_public_path__ + \"static/media/alarm.61eb5a40.mp3\";"],"sourceRoot":""}