{"version":3,"sources":["components/Layout.js","components/Navbar.js","components/Quote.js","components/Square.js","components/Circle.js","components/Input2.js","components/Body.js","components/Timer.js","components/PomodoroControl.js","components/Pomodoro.js","hooks/useInterval.js","App.js","index.js","sounds/alarm.mp3"],"names":["Layout","props","className","children","Navbar","Quote","quotes","quote","author","randomized","array","i","length","Math","floor","random","shuffleArray","Square","inputName","actual","id","type","name","tabIndex","Circle","ModalHandler","circle","setCircle","useState","active","items","setItems","currentId","setCurrentId","OnSubmit","e","preventDefault","target","useEffect","map","item","onClick","Input","taskValue","localStorage","getItem","value","setValue","rows","setRows","minRows","setMinRows","maxRows","setMaxRows","setItem","onKeyPress","charCode","currentTarget","blur","cols","placeholder","onChange","event","previousRows","currentRows","scrollHeight","scrollTop","Body","isShowing","task","child","Timer","currentMode","currentTime","mode","time","moment","format","Controls","activeStatus","handleReset","setActive","Pomodoro","setisShowing","setActual","breakVal","setBreakVal","sessionVal","setSessionVal","setMode","setTime","beep","useRef","callback","delay","savedCallback","current","setInterval","clearInterval","useInterval","play","PomodoroControl","src","alarm","ref","App","document","getElementById","style","lastClear","day_now","Date","getDay","console","log","clear","ReactDOM","render","module","exports"],"mappings":"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","file":"static/js/main.9b04ce7d.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Layout = (props) => {\r\n  return (\r\n    <div className=\"container mx-auto h-screen\">\r\n      <div className=\" grid grid-rows-1 grid-flow-row gap-3 relative\">\r\n        {props.children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React from \"react\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className=\"  h-20 py-3  \">\r\n      <div className=\"flex flex-col content-center\">\r\n        <h1 className=\"font-serif text-center text-gray-900 text-4xl\">\r\n          {\" \"}\r\n          Productivity Planner{\" \"}\r\n        </h1>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\n\r\nconst Quote = () => {\r\n  const quotes = [\r\n    {\r\n      quote:\r\n        \"Simplicity boils down to two steps: Identify the essential. Eliminate the rest\",\r\n      author: \"Leo Babauta\",\r\n    },\r\n    {\r\n      quote: \"Continuous improvement is better than delayed perfection\",\r\n      author: \"Mark Twain\",\r\n    },\r\n    {\r\n      quote: \"Quality means doing it right when no one is looking\",\r\n      author: \"Henry Ford\",\r\n    },\r\n    {\r\n      quote:\r\n        \"To succeed in your mission, you must have single-minded devotion to your goal\",\r\n      author: \"A.P.J Abdul Kalam\",\r\n    },\r\n    {\r\n      quote:\r\n        \"The best way to improve your self-control is to see how and why you lose control\",\r\n      author: \"Kelly McGonigal\",\r\n    },\r\n    {\r\n      quote:\r\n        \"It is possible to commit no mistakes and still lose. That is not a weakness; that is life\",\r\n      author: \"Jean-Luc Picard\",\r\n    },\r\n  ];\r\n\r\n  function shuffleArray(array) {\r\n    let i = array.length - 1;\r\n\r\n    const j = Math.floor(Math.random() * i);\r\n\r\n    return j;\r\n  }\r\n\r\n  const randomized = shuffleArray(quotes);\r\n  return (\r\n    <blockquote className=\"font-sans text-xl antialiased font-bold text-center .italic text-blue-800 pt-8\">\r\n      {quotes[randomized].quote}\r\n      <footer className=\"\">{quotes[randomized].author}</footer>\r\n    </blockquote>\r\n  );\r\n};\r\n\r\nexport default Quote;\r\n","import React from \"react\";\r\n\r\n// Need to work on implement onClick event to save data\r\n// Enter should get us out of the input?\r\nfunction Square({ inputName, actual }) {\r\n  return (\r\n    <div className=\"flex flex-col  sm:px-2 lg:px-12 \" id=\"nonclock\">\r\n      <input\r\n        type=\"text\"\r\n        id=\"\"\r\n        name=\"target\"\r\n        className=\"squarebox text-xs text-center \"\r\n        tabIndex=\"0\"\r\n      />\r\n      <label className=\"target font-semibold text-xs text-left\">\r\n        {inputName}\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Square;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\n// Enable Pomodoro modal when user click on the circle\r\n// Change the color of circle once Pomodoro comples\r\n// Update the Actual square count when user complete each circle\r\n//\r\nconst Circle = ({ ModalHandler, circle, setCircle }) => {\r\n  const [items, setItems] = useState([\r\n    { id: 1, active: true },\r\n    { id: 2, active: true },\r\n    { id: 3, active: true },\r\n    { id: 4, active: true },\r\n    { id: 5, active: true },\r\n  ]);\r\n  const [currentId, setCurrentId] = useState();\r\n\r\n  //onClick event to open the Modal Pomodoro\r\n  const OnSubmit = (e) => {\r\n    e.preventDefault();\r\n    ModalHandler();\r\n    setCurrentId(e.target.id);\r\n  };\r\n\r\n  // This is to change the className based on the active of each circle's id\r\n  useEffect(() => {\r\n    if (circle) {\r\n      setItems(\r\n        items.map((item) => ({\r\n          ...item,\r\n          active: currentId == item.id ? !item.active : item.active,\r\n        }))\r\n      );\r\n      setCircle(!circle);\r\n    }\r\n  }, [circle, currentId]);\r\n\r\n  return (\r\n    <div className=\" \" id=\"nonclock\">\r\n      {items.map((circle) => {\r\n        return (\r\n          <button\r\n            id={`${circle.id}`}\r\n            className={circle.active ? \"circledot\" : \"circledot-close\"}\r\n            onClick={OnSubmit}\r\n          ></button>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Circle;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\n// Need to fix the events change with useEffect to change the sizing\r\n// Need to switch to better DND\r\nconst Input = ({ id, taskValue }) => {\r\n  const [value, setValue] = useState(\r\n    localStorage.getItem(`${id}`) === \"null\"\r\n      ? \"Create your session\"\r\n      : localStorage.getItem(`${id}`)\r\n  );\r\n\r\n  const [rows, setRows] = useState(2);\r\n  const [minRows, setMinRows] = useState(2);\r\n  const [maxRows, setMaxRows] = useState(2);\r\n\r\n  const handleChange = (event) => {\r\n    const textareaLineHeight = 24;\r\n\r\n    const previousRows = event.target.rows;\r\n    setMinRows(event.target.rows); // reset number of rows in textarea\r\n\r\n    const currentRows = ~~(event.target.scrollHeight / textareaLineHeight);\r\n\r\n    if (currentRows === previousRows) {\r\n      event.target.rows = currentRows;\r\n    }\r\n\r\n    if (currentRows >= maxRows) {\r\n      setMaxRows(event.target.rows);\r\n      event.target.scrollTop = event.target.scrollHeight;\r\n    }\r\n\r\n    setValue(event.target.value);\r\n\r\n    currentRows < maxRows ? setRows(currentRows) : setRows(maxRows);\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.charCode === 13) {\r\n      e.currentTarget.blur();\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    setMinRows(minRows);\r\n    setMaxRows(maxRows);\r\n    setRows(rows);\r\n    setValue(value);\r\n    localStorage.setItem(`${id}`, value);\r\n  }, [minRows, maxRows, rows, value]);\r\n\r\n  return (\r\n    <div tabIndex=\"0\">\r\n      <form>\r\n        <textarea\r\n          onKeyPress={handleKeyPress}\r\n          name=\"\"\r\n          id={id}\r\n          cols=\"40\"\r\n          rows={rows}\r\n          value={value}\r\n          className=\"border-solid border border-orange-500 outline-none resize-none ml-5\"\r\n          placeholder=\"Create your session\"\r\n          onChange={handleChange}\r\n        ></textarea>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\nimport Square from \"./Square\";\r\nimport Circle from \"./Circle\";\r\nimport Input from \"./Input2\";\r\nconst Body = ({ ModalHandler, isShowing, circle, setCircle, actual }) => {\r\n  const taskNames = [\r\n    {\r\n      id: 1,\r\n      task: \"MOST IMPORTANT TASK OF THE DAY\",\r\n    },\r\n    {\r\n      id: 2,\r\n      task: \"SECONDARY TASK OF IMPORTANT\",\r\n    },\r\n    {\r\n      id: 3,\r\n      task: \" TERTIARY TASK OF IMPORTANT\",\r\n    },\r\n    { id: 4, task: \"ADDTIONAL TASKS\" },\r\n  ];\r\n  return (\r\n    <div id=\"nonclock\" className=\" object-center\">\r\n      {taskNames.map((child) => {\r\n        return (\r\n          <div id={`${child.id}`} className=\"  row-span-5 \">\r\n            <h1 className=\"text-xl font-bold\">{child.task}</h1>\r\n            <div className=\"flex flex-row relative\">\r\n              <Input id={child.id} />\r\n\r\n              <div className=\"floatObject flex flex-row\">\r\n                <Square inputName={`Target`}></Square>\r\n                <Circle\r\n                  ModalHandler={ModalHandler}\r\n                  isShowing={isShowing}\r\n                  circle={circle}\r\n                  setCircle={setCircle}\r\n                />\r\n                <Square inputName={`Actual`} actual={actual} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Body;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nconst Timer = ({ currentMode, currentTime }) => {\r\n  const [mode] = currentMode;\r\n  const [time] = currentTime;\r\n\r\n  return (\r\n    <div id=\"clock\">\r\n      <h2 className=\"sm:text-sm lg:text-xl\">\r\n        {mode === \"session\" ? \"Session\" : \"Break\"}\r\n      </h2>\r\n      <h3>{moment(time).format(\"mm:ss\")}</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Timer;\r\n","import React from \"react\";\r\n\r\nconst Controls = ({ activeStatus, handleReset }) => {\r\n  const [active, setActive] = activeStatus;\r\n  return (\r\n    <div className=\"controls-wrapper\">\r\n      <button id=\"start_stop\" onClick={() => setActive(!active)}>\r\n        {active ? <span>&#10074;&#10074;</span> : <span>&#9658;</span>}\r\n      </button>\r\n      <button id=\"reset\" onClick={handleReset}>\r\n        &#8635;\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Controls;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nimport { useInterval } from \"../hooks/useInterval\";\r\n\r\nimport Timer from \"./Timer\";\r\nimport PomodoroControl from \"./PomodoroControl\";\r\n\r\nimport alarm from \"../sounds/alarm.mp3\";\r\n\r\nconst Pomodoro = ({\r\n  ModalHandler,\r\n  circle,\r\n  setCircle,\r\n  isShowing,\r\n  setisShowing,\r\n  actual,\r\n  setActual,\r\n}) => {\r\n  const [breakVal, setBreakVal] = useState(5);\r\n  const [sessionVal, setSessionVal] = useState(25);\r\n  const [mode, setMode] = useState(\"session\");\r\n  const [time, setTime] = useState(sessionVal * 60 * 1000);\r\n  const [active, setActive] = useState(false);\r\n  const beep = useRef();\r\n\r\n  // This useInterval allows us to update the second value every sec\r\n  useInterval(() => setTime(time - 1000), active ? 1000 : null);\r\n\r\n  // Calling the\r\n  useEffect(() => {\r\n    setTime(sessionVal * 60 * 1000);\r\n  }, [sessionVal]);\r\n\r\n  // Reset value when time changes between session and break\r\n  useEffect(() => {\r\n    if (time === 0 && mode === \"session\") {\r\n      beep.current.play();\r\n      setMode(\"break\");\r\n      setTime(breakVal * 60 * 1000);\r\n    } else if (time === 0 && mode === \"break\") {\r\n      setCircle(!circle);\r\n      beep.current.play();\r\n      setMode(\"session\");\r\n      setTime(sessionVal * 60 * 1000);\r\n      setisShowing(!isShowing);\r\n      // setActual(active == null ? 0 : active + 1);\r\n    }\r\n  }, [time, breakVal, sessionVal, mode, circle, isShowing]);\r\n\r\n  const handleReset = () => {\r\n    //beep.current.pause()\r\n    //beep.current.currentTime = 0\r\n    setActive(false);\r\n    setMode(\"session\");\r\n    setBreakVal(5);\r\n    setSessionVal(25);\r\n    setTime(25 * 60 * 1000);\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   setisShowing(isShowing);\r\n  // }, [isShowing]);\r\n\r\n  return (\r\n    <div className=\"container mx-auto\">\r\n      <div className=\"time-wrapper\" id=\"clock\">\r\n        <button onClick={ModalHandler} className=\"closeButton\">\r\n          X\r\n        </button>\r\n        <Timer\r\n          currentMode={[mode, setMode]}\r\n          currentTime={[time, setTime]}\r\n        ></Timer>\r\n        <PomodoroControl\r\n          activeStatus={[active, setActive]}\r\n          handleReset={handleReset}\r\n        />\r\n        <h4 className=\"text-center sm:text-sm lg:text-4xl uppercase text-red-600  \">\r\n          {\" \"}\r\n          Pomodoro Clock\r\n        </h4>\r\n        <audio id=\"beep\" src={alarm} ref={beep} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pomodoro;\r\n","import { useEffect, useRef } from \"react\";\r\n\r\nexport function useInterval(callback, delay) {\r\n  const savedCallback = useRef();\r\n\r\n  // Remember the latest callback.\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    function tick() {\r\n      savedCallback.current();\r\n    }\r\n    if (delay !== null) {\r\n      let id = setInterval(tick, delay);\r\n      return () => clearInterval(id);\r\n    }\r\n  }, [delay]);\r\n}\r\n","import React, { useState, useEffect } from \"react\";\nimport Layout from \"./components/Layout\";\nimport Navbar from \"./components/Navbar\";\nimport Quote from \"./components/Quote\";\nimport Body from \"./components/Body\";\nimport Pomodoro from \"./components/Pomodoro\";\nconst App = () => {\n  const [isShowing, setisShowing] = useState(false);\n  const [circle, setCircle] = useState(false);\n  const [actual, setActual] = useState();\n\n  const ModalHandler = () => {\n    setisShowing(!isShowing);\n  };\n  useEffect(() => {\n    if (isShowing === true) {\n      document.getElementById(\"nonclock\").style = \"opacity:0.2\";\n\n      document.getElementById(\"clock\").style =\n        \"border-color: red;background-color:#4CAF50;\";\n    }\n    if (isShowing === false) {\n      document.getElementById(\"nonclock\").style =\n        \"backgroundColor:white; opacity:1\";\n    }\n  }, [isShowing]);\n\n  useEffect(() => {\n    var lastClear = localStorage.getItem(\"lastClear\");\n    var day_now = new Date().getDay();\n    console.log(day_now);\n    if (day_now > lastClear) {\n      localStorage.clear();\n\n      localStorage.setItem(\"lastClear\", day_now);\n    }\n  });\n\n  return (\n    <div className=\"App\">\n      <div>\n        <Layout>\n          <Navbar />\n\n          <Quote />\n\n          <Body\n            ModalHandler={ModalHandler}\n            isShowing={isShowing}\n            circle={circle}\n            setCircle={setCircle}\n            actual={actual}\n          />\n          {isShowing ? (\n            <Pomodoro\n              ModalHandler={ModalHandler}\n              circle={circle}\n              setCircle={setCircle}\n              isShowing={isShowing}\n              setisShowing={setisShowing}\n              actual={actual}\n              setActual={setActual}\n            >\n              {\" \"}\n            </Pomodoro>\n          ) : null}\n        </Layout>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"../src/index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","module.exports = __webpack_public_path__ + \"static/media/alarm.61eb5a40.mp3\";"],"sourceRoot":""}